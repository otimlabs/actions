name: PR Slack Notification

on:
  pull_request:
    types: [opened, reopened, assigned]

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auto-assign PR to author if unassigned
        if: github.event.pull_request.assignee == null
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: [context.payload.pull_request.user.login]
            })
        
      - name: Get Slack User ID
        id: get-slack-id
        run: |
          # Get assignees' Slack IDs (which includes the author)
          ASSIGNEES=$(jq -r --argjson users '${{ toJSON(github.event.pull_request.assignees.*.login) }}' \
            'if ($users|length) > 0 then
              ($users[] as $u | if has($u) then "<@" + .[$u] + ">" else $u end) | @csv
            else
              if has("${{ github.event.pull_request.assignee.login }}") then
                "<@" + .["${{ github.event.pull_request.assignee.login }}"] + ">"
              else
                "${{ github.event.pull_request.assignee.login }}"
              end
            end' \
            .github/workflows/github-slack-mapping.json | sed 's/"//g')
          echo "assignees=$ASSIGNEES" >> $GITHUB_OUTPUT

          # Get reviewers' Slack IDs
          REVIEWERS=$(jq -r --argjson users '${{ toJSON(github.event.pull_request.requested_reviewers.*.login) }}' \
            '$users[] as $u | if has($u) then "<@" + .[$u] + ">" else $u end | @csv' \
            .github/workflows/github-slack-mapping.json | sed 's/"//g')
          echo "reviewers=$REVIEWERS" >> $GITHUB_OUTPUT

      - name: Send Slack notification
        id: slack-notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C08DDF685GC'
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Pull request opened in `${{ github.event.repository.name }}`\n<${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}>:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Assignees:* ${{ steps.get-slack-id.outputs.assignees || github.event.pull_request.assignee.login || 'None' }}\n*Reviewers:* ${{ steps.get-slack-id.outputs.reviewers || 'None' }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      # Add this new step before the reminder
      - name: Get assignee Slack ID for reminder
        id: get-reminder-id
        run: |
          REMINDER_ID=$(jq -r --arg user "${{ github.event.pull_request.assignee.login }}" \
            'if has($user) then "<@" + .[$user] + ">" else $user end' \
            .github/workflows/github-slack-mapping.json)
          echo "reminder_id=$REMINDER_ID" >> $GITHUB_OUTPUT

      - name: Send reviewer reminder
        if: github.event.pull_request.requested_reviewers == null || github.event.pull_request.requested_reviewers.length == 0
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C08DDF685GC'
          payload: |
            {
              "thread_ts": "${{ steps.slack-notification.outputs.thread_ts }}",
              "text": "${{ steps.get-reminder-id.outputs.reminder_id }} Please add reviewers to your PR"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 